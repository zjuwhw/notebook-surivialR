install.packages("asaur")
#install.packages("asaur")
library(asaur)
gastricXelox[23:27,]
library(survival)
head(survexp.us)
str(survexp.us)
class(survexp.us)
hazMale <- survexp.us[,"male","2004"]
hazMale
length(tm)
library(survival)
tm <- c(0,
1/365, # first day of life
7/365, # seventh day of life
28/365, # fourth week of life
1:110) # subsequent years
hazMale <- survexp.us[,"male","2004"]
hazFemale <- survexp.us[,"female","2004"]
length(tm)
length(hazMale)
1/70
lamdba=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", y="Hazard")
rep(lambda,100)
lambba=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", y="Hazard")
lambda=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", y="Hazard")
rep(lambda,100)
lambda=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", ylab = ="Hazard")
lambda=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", ylab="Hazard")
plot(1:100, exp(-lambda*(1:100)), xlab="time", ylab="Survival")
plot(1:100, lambda*(1:100), xlab="time", ylab="Cumulative hazard")
plot(1:100, lambda*exp(-lambda*(1:100)), xlab="time", ylab="PDF")
lambda=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", ylab="Hazard", ylim=c(0,0.01))
plot(1:100, exp(-lambda*(1:100)), xlab="time", ylab="Survival")
plot(1:100, lambda*(1:100), xlab="time", ylab="Cumulative hazard")
plot(1:100, lambda*exp(-lambda*(1:100)), xlab="time", ylab="PDF")
lambda=1/70
layout(matrix(1:4,2,2))
plot(1:100, rep(lambda,100), xlab="time", ylab="Hazard", ylim=c(0,2/70))
plot(1:100, exp(-lambda*(1:100)), xlab="time", ylab="Survival")
plot(1:100, lambda*(1:100), xlab="time", ylab="Cumulative hazard")
plot(1:100, lambda*exp(-lambda*(1:100)), xlab="time", ylab="PDF")
h = function(t, alpha, lambda){
return(alpha*(lambda^alpha)*(t^(alpha-1)))
}
lambda=1/70
plot(1:80, h(1:80, alpha=1, lambda), xlab="time", ylab="hazard")
lines(1:80, h(1:80, alpha=1.5, lambda), col="red")
lines(1:80, h(1:80, alpha=0.75, lambda), col="blue")
1.0.04
1/0.04
h = function(t, alpha, lambda){
return(alpha*(lambda^alpha)*(t^(alpha-1)))
}
lambda=0.03
plot(1:80, h(1:80, alpha=1, lambda), xlab="time", ylab="hazard", type="l")
lines(1:80, h(1:80, alpha=1.5, lambda), col="red")
lines(1:80, h(1:80, alpha=0.75, lambda), col="blue")
text(40, 0.03, "alpha=1, lambda=0.03")
### generate random variables
set.seed(1)
tt.weib = rweibull(1000, shape=1.5, scale=1/0.03)
mean(tt.weib); median(tt.weib)
### the theoretical mean and median
gamma(1+1/1.5)/0.03
(log(2)^(1/1.5))/0.03
gamma(1)
gamma(2)
gamma(3)
gamma(10)
9!
factorial(9)
### back to the Example 2.1
tm = 1:110
hazMale = survexp.us[,"male", "2004"]
### back to the Example 2.1
library(survival)
tm = 1:110
hazMale = survexp.us[,"male", "2004"]
hazFemale = survep.us[,"female", "2004"]
### back to the Example 2.1
library(survival)
tm = 1:110
hazMale = survexp.us[,"male", "2004"]
hazFemale = survexp.us[,"female", "2004"]
length(hazMale)
### back to the Example 2.1
library(survival)
tm = 1:110
hazMale = survexp.us[,"male", "2004"]
hazFemale = survexp.us[,"female", "2004"]
tm.diff =  diff(tm) ## time intervals
survMale = exp(-cumsum(hazMale*tm.diff)*365.24)
survFemale = exp(-cumsum(hazFemale*tm.diff)*365.24)
length(tm.diff)
head(tm.diff)
head(survMale)
length(survMale)
sum(survMale*tm.diff)
mean(survMale*tm.diff)
mean(survMale*tm.diff*365.24)
head(survMale)
head(tm.diff)
library(survival)
time = c(7,6,6,5,2,4)
status = c(0,1,0,0,1,1)
surv_obj <- Surv(time, status)
summary(surv_obj)
library(survival)
time = c(7,6,6,5,2,4)
status = c(0,1,0,0,1,1)
surv_obj <- Surv(time, status)
fit <- survreg(surv_obj ~ 1, dist = "exponential")
summary(fit)
fit$scale
1/fit$scale
exp(2.303)
1/exp(2.303)
fit$coefficients
1/exp(fit$coefficients)
library(survival)
time = c(7,6,6,5,2,4)
status=c(0,1,0,0,1,1)
Surv(time, status)
result.km = survfit(Surv(time, status)~1)
summary(result.km)
1/6
1/5
result.km
summary(result.km2)
library(survival)
time = c(7,6,6,5,2,4)
status=c(0,1,0,0,1,1)
Surv(time, status)
result.km = survfit(Surv(time, status)~1)
result.km
summary(result.km)
plot(result.km)
result.km2 = survfit(Surv(time, status)~1, conf.type="log-log")
summary(result.km2)
?survfit
head(gastricXelox)
library(asaur)
timeMonths = gastricXelx$timeWeeks * 7 /30.25
library(asaur)
timeMonths = gastricXelox$timeWeeks * 7 /30.25
